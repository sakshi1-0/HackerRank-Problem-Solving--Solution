import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the flatlandSpaceStations function below.
    static int flatlandSpaceStations(int n, int[] c) {
  int maxDistance = 0;
                
        for(int cityNum = 0 ; cityNum < n ; cityNum++) {
            int localMax = Math.abs(cityNum - c[0]);
            if(localMax != 0) {
                for(int stationIndex = 1; stationIndex < c.length; stationIndex++) {
                    int stationNum = c[stationIndex];
                    int distance = Math.abs(cityNum - stationNum);
                    if(distance < localMax) {
                        localMax = distance;
                    }
                }
            }
            
            if(localMax > maxDistance) {
                maxDistance = localMax;
            }
        }
        
        return maxDistance;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nm = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nm[0]);

        int m = Integer.parseInt(nm[1]);

        int[] c = new int[m];

        String[] cItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < m; i++) {
            int cItem = Integer.parseInt(cItems[i]);
            c[i] = cItem;
        }

        int result = flatlandSpaceStations(n, c);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
