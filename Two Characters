import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'alternate' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts STRING s as parameter.
     */

    public static int alternate(String s) {
    // Write your code here
    int count=0;  
boolean b=true;
int result=0;
char arr[]=s.toCharArray();

    List<Character> list =new ArrayList<>();
    for(char c:arr){
        list.add(c);   
    }
    list=list.stream().distinct().collect(Collectors.toList());
    String st=s;

    for(int i=0;i<list.size()-1;i++){

        for(int j=i+1;j<list.size();j++){  
            st=s;
           st=st.replaceAll("[^"+list.get(i) +list.get(j) +"]", "");
                    for(int k=0;k<st.length()-1;k++){
                    if(st.charAt(k)==st.charAt(k+1)){
                        b=false;
                        count=0;
                       break;
                    }
                    b=true;
                }

            if(b){
                count=st.length();
                if(count>result){
                    result=count;
                    b=true;
                }
            }
        }
    }
  return result;  
    

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int l = Integer.parseInt(bufferedReader.readLine().trim());

        String s = bufferedReader.readLine();

        int result = Result.alternate(s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
