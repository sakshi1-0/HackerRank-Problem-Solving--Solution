import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'migratoryBirds' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int migratoryBirds(List<Integer> arr) {
    // Write your code here
  
        int[] counts= {0,0,0,0,0};
        
        for(int i=0; i<arr.size(); i++){
            if(arr.get(i)==1){
                counts[0]+=1;
            }
            if(arr.get(i)==2){
                counts[1]+=1;
            }
            if(arr.get(i)==3){
                counts[2]+=1;
            }
            if(arr.get(i)==4){
                counts[3]+=1;
            }
            if(arr.get(i)==5){
                counts[4]+=1;
            }
        }
        
        int max=0;
        int birdType=0;
        for(int i=0; i<counts.length; i++){
            if(counts[i]>max){
                max= counts[i];
                birdType=i+1;
            }
            if(counts[i]==max){
                if(birdType>i){
                    birdType=i+1;
                }
            }
        }
        return birdType;
    
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
