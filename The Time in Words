import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'timeInWords' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER h
     *  2. INTEGER m
     */

    public static String timeInWords(int h, int m) {
    // Write your code here
  final String hours[] = {"",        "one",       "two",      "three",
            "four",    "five",      "six",      "seven",
            "eight",   "nine",      "ten",      "eleven",
            "twelve"};
      final String[] minutes = {
            "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine",
            "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen",
            "twenty", "twenty one", "twenty two", "twenty three", "twenty four", "twenty five", "twenty six", "twenty seven", "twenty eight", "twenty nine",       
        };
    // Write your code here
      if(m == 0)
        return hours[h]+ " " +"o' clock" ;
      if(m == 15)
        return "quarter" + " " + "past"+ " " + hours[h] ;
      if(m == 30)
        return "half" + " " + "past"+ " " + hours[h] ;
      if(m == 45){
        if(h == 12)
          return "quarter to"+ " " + hours[1] ;
        return "quarter to"+ " " + hours[h+1] ;
      }
      if( m < 30){
        if(m < 10)
          return minutes[m]+" "+ "minute" + " " + "past" + " " + hours[h]; 
        return minutes[m]+" "+ "minutes" + " " + "past" + " " + hours[h];
      }
      if(m > 30 && h == 12)
        return minutes[60-m]+ " "+ "minutes" + " " + "to" + " " + hours[1] ;
      return minutes[60-m]+ " " + "minutes" + " " + "to" + " " + hours[h+1] ;
    
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int h = Integer.parseInt(bufferedReader.readLine().trim());

        int m = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.timeInWords(h, m);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
