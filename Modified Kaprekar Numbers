import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'kaprekarNumbers' function below.
     *
     * The function accepts following parameters:
     *  1. INTEGER p
     *  2. INTEGER q
     */

    public static void kaprekarNumbers(int p, int q) {
    // Write your code here
    boolean found = false;
        
    while (p <= q) {
        String sq = String.valueOf((long) p * p);
        String left = sq.substring(0, (int) (sq.length() / 2));
        String right = sq.substring((int) (sq.length() / 2));

        int l = Integer.valueOf(left.equals("") ? "0" : left);
        int r = Integer.valueOf(right); 

        if (l + r == p) {
            found = true;
            System.out.print(p + " ");
        }
            
        p++;
    }
        
    if (!found) {
        System.out.print("INVALID RANGE");
    }
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int p = Integer.parseInt(bufferedReader.readLine().trim());

        int q = Integer.parseInt(bufferedReader.readLine().trim());

        Result.kaprekarNumbers(p, q);

        bufferedReader.close();
    }
}
