import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'happyLadybugs' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING b as parameter.
     */

    public static String happyLadybugs(String b) {
    // Write your code here
    if (!b.contains("_")) {
        int len = 1;

        for (int i = 0; i < b.length() - 1; i++) {                
            if (b.charAt(i) != b.charAt(i + 1)) {
                if (len == 1) return "NO";
                len = 1;
            } else {
                len++;
            }
        }
            
        if (len == 1) return "NO";
    } else {
        List<String> arr = Arrays.asList(b.split(""));

        for (int i = 0; i < arr.size(); i++) {                
            if (!arr.get(i).equals("_") && Collections.frequency(arr, arr.get(i)) < 2) {
                return "NO";
            }
        }
    }
        
    return "YES";
    }

}
public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int g = Integer.parseInt(bufferedReader.readLine().trim());

        IntStream.range(0, g).forEach(gItr -> {
            try {
                int n = Integer.parseInt(bufferedReader.readLine().trim());

                String b = bufferedReader.readLine();

                String result = Result.happyLadybugs(b);

                bufferedWriter.write(result);
                bufferedWriter.newLine();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();
        bufferedWriter.close();
    }
}
